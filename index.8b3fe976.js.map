{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAQ,EAAM,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,CAChD,EAAY,EAAM,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAE5C,EAAa,EAAG,SAAS,aAAa,CAAC,SAAS,IAAI,EAAE,GAAG,CAAC,SAAC,CAAjE,EACE,OAAO,EAAI,KAAK,CAAC,EAAE,CAAC,WAAW,AACjC,GAEA,SAAS,EAAa,CAAU,EAC9B,MAAO,OAAkB,MAAA,CAAX,EAAW,QAC3B,CAEA,EAAM,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,EAAY,GAAG,SAAS,CAAG,EAAa,GACvE,EAAM,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,EAAY,GAAG,SAAS,CAAG,EAAa,GAMtE,EAAG,EAAM,OAAO,CAAC,EAAE,CAAC,IAAI,EAAE,OAAO,CAAC,SAAC,CAAA,CAAK,CAAxC,MAJwB,CAKvB,CAAA,EAAI,UAAU,CAAC,EAAY,GAAG,SAAS,EALhB,EAKmC,CAAS,CAAC,EAAE,CAJ/D,OAAa,MAAA,CAAN,EAAM,SAKtB","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar table = document.querySelector(\"table\");\nvar title = table.tHead.rows[0].cells[1].textContent;\nvar rowLength = table.tHead.rows[0].cells.length;\nvar positions = _to_consumable_array(document.querySelector(\"tbody\").rows).map(function(row) {\n    return row.cells[1].textContent;\n});\nfunction addTitleCell(columnName) {\n    return \"<th>\".concat(columnName, \"</th>\");\n}\ntable.tHead.rows[0].insertCell(rowLength - 1).outerHTML = addTitleCell(title);\ntable.tFoot.rows[0].insertCell(rowLength - 1).outerHTML = addTitleCell(title);\nfunction addPositionCell(value) {\n    return \"<th>\".concat(value, \"</th>\");\n}\n_to_consumable_array(table.tBodies[0].rows).forEach(function(row, i) {\n    row.insertCell(rowLength - 1).innerHTML = addPositionCell(positions[i]);\n});\n\n//# sourceMappingURL=index.8b3fe976.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\nconst title = table.tHead.rows[0].cells[1].textContent;\nconst rowLength = table.tHead.rows[0].cells.length;\n\nconst positions = [...document.querySelector('tbody').rows].map((row) => {\n  return row.cells[1].textContent;\n});\n\nfunction addTitleCell(columnName) {\n  return `<th>${columnName}</th>`;\n}\n\ntable.tHead.rows[0].insertCell(rowLength - 1).outerHTML = addTitleCell(title);\ntable.tFoot.rows[0].insertCell(rowLength - 1).outerHTML = addTitleCell(title);\n\nfunction addPositionCell(value) {\n  return `<th>${value}</th>`;\n}\n\n[...table.tBodies[0].rows].forEach((row, i) => {\n  row.insertCell(rowLength - 1).innerHTML = addPositionCell(positions[i]);\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","table","document","querySelector","title","tHead","rows","cells","textContent","rowLength","positions","map","row","addTitleCell","columnName","concat","insertCell","outerHTML","tFoot","tBodies","forEach","value","innerHTML"],"version":3,"file":"index.8b3fe976.js.map"}